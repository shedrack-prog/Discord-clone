// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}


// Modelss>>>>>>>>>>>>>>>>>>>>

model Profile {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId  
  userId       String       @unique
  name         String
  imageUrl     String       @db.String
  email        String       @db.String


  servers      Server[]
  members      Member[]
  channels     Channel[]


  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

}

model Server {
   id           String      @id @default(auto()) @map("_id") @db.ObjectId
   name         String
   imageUrl     String      @db.String
   inviteCode   String      @unique

   profileId    String      @db.ObjectId
   profile      Profile     @relation(fields: [profileId], references: [id], onDelete:Cascade) 
   
   members      Member[]
   channels     Channel[]


   createdAt    DateTime    @default(now())
   updatedAt    DateTime    @updatedAt
   @@index([profileId])
}
   

   


enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
   id           String         @id @default(auto()) @map("_id") @db.ObjectId
   role         MemberRole     @default(GUEST)
   profileId    String         @db.ObjectId
   profile      Profile        @relation(fields: [profileId], references: [id], onDelete:Cascade)

   serverId     String         @db.ObjectId
   server       Server         @relation(fields: [serverId], references: [id], onDelete:Cascade)

   createdAt     DateTime       @default(now())
   updatedAt     DateTime       @updatedAt
   @@index([profileId])
   @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
   id           String         @id @default(auto()) @map("_id") @db.ObjectId
   name         String
   channelType  ChannelType    @default(TEXT)
   
   profileId    String         @db.ObjectId
   profile      Profile        @relation(fields: [profileId], references: [id], onDelete: Cascade)

   serverId     String         @db.ObjectId
   server       Server         @relation(fields: [serverId], references: [id], onDelete: Cascade)


   createdAt    DateTime       @default(now())
   updatedAt    DateTime       @updatedAt
   @@index([serverId])
   @@index([profileId])
}